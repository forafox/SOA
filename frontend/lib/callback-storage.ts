// –û–±—â–µ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–ª–ª–±—ç–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö API routes
export interface CallbackData {
  id: string
  type: string
  data: unknown
  status: string
  timestamp: string
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å–∏–Ω–≥–ª—Ç–æ–Ω, —á—Ç–æ–±—ã –ø–µ—Ä–µ–∂–∏–≤–∞—Ç—å hot-reload –∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç-–∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏–º–≤–æ–ª –Ω–∞ globalThis, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å –ø–æ –∏–º–µ–Ω–∞–º
const GLOBAL_CALLBACKS_KEY = '__recent_callbacks_storage__'

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–¥–∏–Ω—ã–π —Ä–∞–∑–¥–µ–ª—è–µ–º—ã–π –º–∞—Å—Å–∏–≤ –≤ globalThis
const sharedStore: CallbackData[] = (globalThis as any)[GLOBAL_CALLBACKS_KEY] ?? []
if (!(GLOBAL_CALLBACKS_KEY in (globalThis as any))) {
  ;(globalThis as any)[GLOBAL_CALLBACKS_KEY] = sharedStore
}

// –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—â–∏–π –º–∞—Å—Å–∏–≤
const recentCallbacks: CallbackData[] = sharedStore

export function addCallback(callback: Omit<CallbackData, 'id' | 'timestamp'>) {
  const newCallback: CallbackData = {
    ...callback,
    id: Math.random().toString(36).substr(2, 9),
    timestamp: new Date().toISOString()
  }
  
  console.log('üì¶ CallbackStorage: Adding callback:', newCallback)
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
  recentCallbacks.unshift(newCallback)
  
  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
  if (recentCallbacks.length > 10) {
    recentCallbacks.splice(10)
  }
  
  console.log('üì¶ CallbackStorage: Total callbacks in storage:', recentCallbacks.length)
  
  return newCallback
}

export function getRecentCallbacks(): CallbackData[] {
  console.log('üì¶ CallbackStorage: Returning callbacks:', recentCallbacks.length)
  return [...recentCallbacks]
}
