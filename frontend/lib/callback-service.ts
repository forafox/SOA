import { eventEmitter } from "./event-emitter"
import { callbackUrls } from "./config"

export interface CallbackData {
  movieId?: number
  newOscarsCount?: number
  addedOscars?: number
  category?: string
  date?: string
  updatedMovies?: unknown[]
}

export class CallbackService {
  private static instance: CallbackService
  private toast: ((options: { title: string; description: string; duration?: number; className?: string }) => void) | null = null

  private constructor() {}

  public static getInstance(): CallbackService {
    if (!CallbackService.instance) {
      CallbackService.instance = new CallbackService()
    }
    return CallbackService.instance
  }

  public setToast(toast: (options: { title: string; description: string; duration?: number; className?: string }) => void) {
    this.toast = toast
  }

  public handleOnAwarded(data: CallbackData) {
    console.log('Processing onAwarded callback:', data)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ UI
    if (typeof window !== 'undefined') {
      window.dispatchEvent(new CustomEvent('callback-received', {
        detail: { type: 'onAwarded', data, status: 'success' }
      }))
    }
    
    if (this.toast) {
      this.toast({
        title: "üé¨ –§–∏–ª—å–º—ã –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω—ã!",
        description: `–ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –¥–ª–∏–Ω–µ. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${data.updatedMovies?.length || 0} —Ñ–∏–ª—å–º–æ–≤.`,
        duration: 8000,
        className: "border-green-500 bg-green-50 text-green-900",
      })
    }
  }

  public handleNotifyAdmins(data: CallbackData) {
    console.log('Processing notifyAdmins callback:', data)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –≤ UI
    if (typeof window !== 'undefined') {
      window.dispatchEvent(new CustomEvent('callback-received', {
        detail: { type: 'notifyAdmins', data, status: 'success' }
      }))
    }
    
    if (this.toast) {
      this.toast({
        title: "üë• –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º",
        description: `–ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–∏ ${data.updatedMovies?.length || 0} —Ñ–∏–ª—å–º–æ–≤ —Å –º–∞–ª—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –û—Å–∫–∞—Ä–æ–≤.`,
        duration: 8000,
        className: "border-blue-500 bg-blue-50 text-blue-900",
      })
    }
  }

  public handleNotifyOscarsTeam(data: CallbackData) {
    console.log('üèÜ CallbackService: Processing notifyOscarsTeam callback:', data)
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ —á–µ—Ä–µ–∑ event emitter
    console.log('üèÜ CallbackService: Emitting event via event emitter')
    eventEmitter.emit('callback-received', { 
      type: 'notifyOscarsTeam', 
      data, 
      status: 'success' 
    })
    
    // –¢–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ window events –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if (typeof window !== 'undefined') {
      console.log('üèÜ CallbackService: Sending event to UI via window')
      window.dispatchEvent(new CustomEvent('callback-received', {
        detail: { type: 'notifyOscarsTeam', data, status: 'success' }
      }))
      console.log('üèÜ CallbackService: Event sent to UI via window')
    } else {
      console.log('üèÜ CallbackService: window is undefined, cannot send event via window')
    }
    
    if (this.toast) {
      console.log('üèÜ CallbackService: Showing toast notification')
      this.toast({
        title: "üèÜ –ö–æ–º–∞–Ω–¥–∞ –û—Å–∫–∞—Ä–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∞",
        description: `–ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –û—Å–∫–∞—Ä–æ–≤ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ${data.addedOscars || 0} –û—Å–∫–∞—Ä–æ–≤ –∫ —Ñ–∏–ª—å–º—É ID ${data.movieId}.`,
        duration: 8000,
        className: "border-purple-500 bg-purple-50 text-purple-900",
      })
    } else {
      console.log('üèÜ CallbackService: No toast available')
    }
  }

  public getCallbackUrls() {
    return callbackUrls
  }
}

export const callbackService = CallbackService.getInstance()
